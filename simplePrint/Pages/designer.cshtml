@page
@model simplePrint.designerModel
@{
    ViewData["Title"] = "designer";
}
<h1>designer</h1>
<body onload="init()">
    <div id="canvas">
        <canvas id="can" width="220" height="220" style="align-content:center;top:10%;left:10%;border:2px solid;"></canvas>
    </div>
    <br />
    <form method="post">
        <div class="input-group">
            <input class="form-control" type="text" asp-for="bedTemp" placeholder="Bed Temperature in Celsius" />
            <input class="form-control" type="text" asp-for="extTemp" placeholder="Nozzle Temperature(180-200C for pla)" />
            <input class="form-control" type="text" asp-for="zRate" placeholder="Steps per Z layer" />
            <input class="form-control" type="text" asp-for="eRate" placeholder="Steps for extruder" />
        </div>
        <br />
        <div class="container">
            <div class="row">
                <div class="col-6">
                    <input class="btn-dark" type="button" id="sendButton" value="Submit Layer" />
                    <input class="btn-dark" type="button" id="repeatLayer" value="Repeat Previous Layer" />
                </div>
            </div>
        </div>
        <br />
        <button type="submit" class="btn-outline-danger">Submit And Convert my Layers to a Gcode File</button>
    </form>
    <input class="btn-light" type="button" value="Clear Layer" id="clr" size="23" onclick="erase()">
</body>
<script type="text/javascript">
    var xyVals = [];
    var canvas, ctx, flag = false,
        prevX = 0,
        currX = 0,
        prevY = 0,
        currY = 0,
        dot_flag = false;

    var x = "black",
        y = 2;

    function init() {
        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;

        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
    }

    function draw() {
        ctx.beginPath();
        ctx.moveTo(prevX, prevY);
        ctx.lineTo(currX, currY);
        var xyCoords = currX + "&" + currY;
        xyVals.push(xyCoords);
        ctx.strokeStyle = x;
        ctx.lineWidth = y;
        ctx.stroke();
        ctx.closePath();
    }

    function erase() {
        ctx.clearRect(0, 0, w, h);
        xyVals = [];
    }
    function repeatPrevious() {

    }

    function findxy(res, e) {
        if (res == 'down') {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - canvas.offsetLeft;
            currY = e.clientY - canvas.offsetTop;

            flag = true;
            dot_flag = true;
            if (dot_flag) {
                ctx.beginPath();
                ctx.fillStyle = x;
                ctx.fillRect(currX, currY, 2, 2);
                ctx.closePath();
                dot_flag = false;
            }
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = e.clientX - canvas.offsetLeft;
                currY = e.clientY - canvas.offsetTop;
                draw();
            }
        }
    }
</script>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script src="~/js/image.js"></script>
<style src="~/css/designer.css"></style>